---
  # - name: check staticpath - querying
  #   cisco.aci.aci_static_binding_to_epg:
  #     <<: *apic_info
  #     pod_id:    "{{ item.pod }}"
  #     leafs:     "{{ item.leaf }}"
  #     interface: "{{ item.interface }}"
  #     state: query
  #   loop: "{{ static_paths }}"
  #   register: queried_epg_binding

  # - name: check staticpath - set variable
  #   set_fact: 
  #     fvRsPathAtt: "{{ queried_epg_binding | json_query('results[].current[].{fvRsPathAtt:fvRsPathAtt}') }}"

  # - name: check staticpath - validate
  #   ansible.builtin.assert:
  #     that: fvRsPathAtt | length == 0
  #     fail_msg: STATIC_PORT_ALREADY_EXISTS
  
  - name: check staticpath - querying
    cisco.aci.aci_rest:
      host:           "{{ ansible_host }}" 
      user:           "{{ ansible_user }}" 
      password:       "{{ ansible_password }}" 
      validate_certs: "{{ validate_certs }}"
      use_ssl:        "{{ use_ssl }}"
      path:           /api/node/class/fvRsPathAtt.json?query-target-filter=and(wcard(fvRsPathAtt.dn,"tn-{{ tenant.name }}"))
      method:         "get"
    register: get_staticpath
  
  - debug: var=get_staticpath

  - name: check staticpath - set variable
    set_fact: 
      get_staticpath_dn: "{{ get_staticpath | json_query('imdata[].fvRsPathAtt.attributes.{dn:dn}') }}"

  - name: check staticpath - debugging
    debug:
      msg: "{{ get_staticpath_dn | json_query(q) }}"
    vars:
      q: "[?dn==`uni/tn-{{ tenant.name }}/ap-{{ item.ap }}/epg-{{ item.epg }}/rspathAtt-[topology/pod-{{ item.pod }}/paths-{{ item.leaf }}/pathep-[eth{{ item.interface }}]]`]"
    loop: "{{ static_paths }}"

  - name: check staticpath - validate
    assert:
      that: "{{ get_staticpath_dn | json_query(q) | length == 0 }}"
      fail_msg: "[FAILED][STATIC_PORT_ALREADY_EXISTS]"
    vars:
      q: "[?dn==`uni/tn-{{ tenant.name }}/ap-{{ item.ap }}/epg-{{ item.epg }}/rspathAtt-[topology/pod-{{ item.pod }}/paths-{{ item.leaf }}/pathep-[eth{{ item.interface }}]]`]"
    loop: "{{ static_paths }}"